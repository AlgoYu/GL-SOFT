// <auto-generated />
using System;
using CompanyWebSite.Areas.ManagementSystem.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CompanyWebSite.Migrations
{
    [DbContext(typeof(EFContext))]
    partial class EFContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CompanyWebSite.Areas.ManagementSystem.Models.Case", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cover");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Case");
                });

            modelBuilder.Entity("CompanyWebSite.Areas.ManagementSystem.Models.CaseImage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CaseID");

                    b.Property<string>("Path");

                    b.HasKey("ID");

                    b.HasIndex("CaseID");

                    b.ToTable("CaseImages");
                });

            modelBuilder.Entity("CompanyWebSite.Areas.ManagementSystem.Models.Client", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("CompanyWebSite.Areas.ManagementSystem.Models.ClientCase", b =>
                {
                    b.Property<int>("ClientID");

                    b.Property<int>("CaseID");

                    b.HasKey("ClientID", "CaseID");

                    b.HasIndex("CaseID");

                    b.ToTable("ClientCase");
                });

            modelBuilder.Entity("CompanyWebSite.Areas.ManagementSystem.Models.Color", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("ID");

                    b.ToTable("Color");
                });

            modelBuilder.Entity("CompanyWebSite.Areas.ManagementSystem.Models.ColorCase", b =>
                {
                    b.Property<int>("ColorID");

                    b.Property<int>("CaseID");

                    b.HasKey("ColorID", "CaseID");

                    b.HasIndex("CaseID");

                    b.ToTable("ColorCase");
                });

            modelBuilder.Entity("CompanyWebSite.Areas.ManagementSystem.Models.Cooper", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlreadyRead");

                    b.Property<DateTime>("CommitDateTime");

                    b.Property<string>("Company");

                    b.Property<string>("Contact");

                    b.Property<string>("Detail");

                    b.Property<string>("Email");

                    b.Property<string>("LinkMan");

                    b.HasKey("ID");

                    b.ToTable("Coopers");
                });

            modelBuilder.Entity("CompanyWebSite.Areas.ManagementSystem.Models.CooperationContent", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CooperationTitleID");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.HasIndex("CooperationTitleID");

                    b.ToTable("CooperContent");
                });

            modelBuilder.Entity("CompanyWebSite.Areas.ManagementSystem.Models.CooperationTitle", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("Type");

                    b.HasKey("ID");

                    b.ToTable("CooperTitle");
                });

            modelBuilder.Entity("CompanyWebSite.Areas.ManagementSystem.Models.Industry", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Industry");
                });

            modelBuilder.Entity("CompanyWebSite.Areas.ManagementSystem.Models.IndustryCase", b =>
                {
                    b.Property<int>("IndustryID");

                    b.Property<int>("CaseID");

                    b.HasKey("IndustryID", "CaseID");

                    b.HasIndex("CaseID");

                    b.ToTable("IndustryCase");
                });

            modelBuilder.Entity("CompanyWebSite.Areas.ManagementSystem.Models.Manager", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ManagerName");

                    b.Property<string>("PassWord");

                    b.HasKey("ID");

                    b.ToTable("Manager");
                });

            modelBuilder.Entity("CompanyWebSite.Areas.ManagementSystem.Models.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("CompanyWebSite.Areas.ManagementSystem.Models.ProductCase", b =>
                {
                    b.Property<int>("ProductID");

                    b.Property<int>("CaseID");

                    b.HasKey("ProductID", "CaseID");

                    b.HasIndex("CaseID");

                    b.ToTable("ProductCase");
                });

            modelBuilder.Entity("CompanyWebSite.Areas.ManagementSystem.Models.SystemInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Copyright");

                    b.Property<string>("KeyWords");

                    b.Property<string>("LogoUrl");

                    b.Property<string>("Phone");

                    b.Property<string>("QQ");

                    b.Property<string>("Record");

                    b.Property<string>("SiteTitle");

                    b.Property<string>("WeChat");

                    b.Property<string>("WeChatQR");

                    b.HasKey("ID");

                    b.ToTable("SystemInfo");
                });

            modelBuilder.Entity("CompanyWebSite.Areas.ManagementSystem.Models.CaseImage", b =>
                {
                    b.HasOne("CompanyWebSite.Areas.ManagementSystem.Models.Case")
                        .WithMany("CaseImages")
                        .HasForeignKey("CaseID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CompanyWebSite.Areas.ManagementSystem.Models.ClientCase", b =>
                {
                    b.HasOne("CompanyWebSite.Areas.ManagementSystem.Models.Case", "Case")
                        .WithMany("ClientCases")
                        .HasForeignKey("CaseID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CompanyWebSite.Areas.ManagementSystem.Models.Client", "Client")
                        .WithMany("ClientCases")
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CompanyWebSite.Areas.ManagementSystem.Models.ColorCase", b =>
                {
                    b.HasOne("CompanyWebSite.Areas.ManagementSystem.Models.Case", "Case")
                        .WithMany("ColorCases")
                        .HasForeignKey("CaseID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CompanyWebSite.Areas.ManagementSystem.Models.Color", "Color")
                        .WithMany("ColorCases")
                        .HasForeignKey("ColorID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CompanyWebSite.Areas.ManagementSystem.Models.CooperationContent", b =>
                {
                    b.HasOne("CompanyWebSite.Areas.ManagementSystem.Models.CooperationTitle", "CooperationTitle")
                        .WithMany("CooperationContents")
                        .HasForeignKey("CooperationTitleID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CompanyWebSite.Areas.ManagementSystem.Models.IndustryCase", b =>
                {
                    b.HasOne("CompanyWebSite.Areas.ManagementSystem.Models.Case", "Case")
                        .WithMany("IndustryCases")
                        .HasForeignKey("CaseID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CompanyWebSite.Areas.ManagementSystem.Models.Industry", "Industry")
                        .WithMany("IndustryCases")
                        .HasForeignKey("IndustryID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CompanyWebSite.Areas.ManagementSystem.Models.ProductCase", b =>
                {
                    b.HasOne("CompanyWebSite.Areas.ManagementSystem.Models.Case", "Case")
                        .WithMany("ProductCases")
                        .HasForeignKey("CaseID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CompanyWebSite.Areas.ManagementSystem.Models.Product", "Product")
                        .WithMany("ProductCases")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
