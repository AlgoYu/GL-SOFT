#pragma checksum "C:\Users\Administrator\Desktop\Company\CompanyWebSite\Areas\ManagementSystem\Views\CaseManager\AddCase.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "83a3ad962113f60ace8d8cf1573df6e8d74670f8"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_ManagementSystem_Views_CaseManager_AddCase), @"mvc.1.0.view", @"/Areas/ManagementSystem/Views/CaseManager/AddCase.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Areas/ManagementSystem/Views/CaseManager/AddCase.cshtml", typeof(AspNetCore.Areas_ManagementSystem_Views_CaseManager_AddCase))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"83a3ad962113f60ace8d8cf1573df6e8d74670f8", @"/Areas/ManagementSystem/Views/CaseManager/AddCase.cshtml")]
    public class Areas_ManagementSystem_Views_CaseManager_AddCase : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<object>
    {
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(15, 29, true);
            WriteLiteral("\r\n<!DOCTYPE html>\r\n\r\n<html>\r\n");
            EndContext();
            BeginContext(44, 4458, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "17a7329192214b8a9c4dbf47da531a42", async() => {
                BeginContext(50, 3886, true);
                WriteLiteral(@"
    <title>AddCase</title>
    <link href=""/layui/css/layui.css"" rel=""stylesheet"" />
    <link href=""https://cdn.bootcss.com/webuploader/0.1.1/webuploader.css"" rel=""stylesheet"">
    <style>
        .content-center {
            text-align: center;
        }
        .cover-wh{
            width: 277px;
            height: 219px;
            margin-top: 15px;
        }
        .margin-top {
            margin-top: 15px;
        }
        /*demo鏍峰紡*/
        #picker {
            display: inline-block;
            line-height: 1.428571429;
            vertical-align: middle;
            margin: 0 12px 0 0;
        }

        #picker .webuploader-pick {
            padding: 6px 12px;
            display: block;
        }

        #uploader-demo .thumbnail {
            width: 110px;
            height: 110px;
        }

            #uploader-demo .thumbnail img {
                width: 100%;
            }

        .uploader-list {
            width: 100%;
            overf");
                WriteLiteral(@"low: hidden;
        }

        .file-item {
            float: left;
            position: relative;
            margin: 0 20px 20px 0;
            padding: 4px;
        }

            .file-item .error {
                position: absolute;
                top: 4px;
                left: 4px;
                right: 4px;
                background: red;
                color: white;
                text-align: center;
                height: 20px;
                font-size: 14px;
                line-height: 23px;
            }

            .file-item .info {
                position: absolute;
                left: 4px;
                bottom: 4px;
                right: 4px;
                height: 20px;
                line-height: 20px;
                text-indent: 5px;
                background: rgba(0, 0, 0, 0.6);
                color: white;
                overflow: hidden;
                white-space: nowrap;
                text-overflow: ellipsis;
             ");
                WriteLiteral(@"   font-size: 12px;
                z-index: 10;
            }

        .upload-state-done:after {
            content: ""\f00c"";
            font-family: FontAwesome;
            font-style: normal;
            font-weight: normal;
            line-height: 1;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
            font-size: 32px;
            position: absolute;
            bottom: 0;
            right: 4px;
            color: #4cae4c;
            z-index: 99;
        }

        .file-item .progress {
            position: absolute;
            right: 4px;
            bottom: 4px;
            height: 3px;
            left: 4px;
            height: 4px;
            overflow: hidden;
            z-index: 15;
            margin: 0;
            padding: 0;
            border-radius: 0;
            background: transparent;
        }

            .file-item .progress span {
                display: block;
                overf");
                WriteLiteral(@"low: hidden;
                width: 0;
                height: 100%;
                background: #d14 url(/images/public/progress.png) repeat-x;
                -webit-transition: width 200ms linear;
                -moz-transition: width 200ms linear;
                -o-transition: width 200ms linear;
                -ms-transition: width 200ms linear;
                transition: width 200ms linear;
                -webkit-animation: progressmove 2s linear infinite;
                -moz-animation: progressmove 2s linear infinite;
                -o-animation: progressmove 2s linear infinite;
                -ms-animation: progressmove 2s linear infinite;
                animation: progressmove 2s linear infinite;
                -webkit-transform: translateZ(0);
            }

        ");
                EndContext();
                BeginContext(3937, 187, true);
                WriteLiteral("@-webkit-keyframes progressmove {\r\n        0% {\r\n            background-position: 0 0;\r\n        }\r\n        100% {\r\n            background-position: 17px 0;\r\n        }\r\n        }\r\n        ");
                EndContext();
                BeginContext(4125, 184, true);
                WriteLiteral("@-moz-keyframes progressmove {\r\n        0% {\r\n            background-position: 0 0;\r\n        }\r\n        100% {\r\n            background-position: 17px 0;\r\n        }\r\n        }\r\n        ");
                EndContext();
                BeginContext(4310, 185, true);
                WriteLiteral("@keyframes progressmove {\r\n        0% {\r\n            background-position: 0 0;\r\n        }\r\n        100% {\r\n            background-position: 17px 0;\r\n        }\r\n        }\r\n    </style>\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(4502, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(4504, 10371, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6387e6a6dbfd47d7b80d80c3067c4ec1", async() => {
                BeginContext(4510, 3052, true);
                WriteLiteral(@"
    <form class=""layui-form layui-form-pane"">
        <div class=""layui-form-item content-center"">
            <div>
                <img src=""/images/case/case-1.jpg"" id=""image"" class=""cover-wh"" />
                <div>
                    <button type=""button"" class=""layui-btn layui-btn-normal layui-btn-sm margin-top"" id=""cover-bt"">上传封面</button>
                </div>
                <input id=""cover"" type=""hidden"" name=""cover""/>
            </div>
        </div>
        <div class=""layui-form-item"">
            <label class=""layui-form-label"">案例名：</label>
            <div class=""layui-input-block"">
                <input class=""layui-input"" placeholder=""输入案例名称"" lay-verify=""required"" name=""name""/>
            </div>
        </div>
        <div class=""layui-form-item"">
            <label class=""layui-form-label"">所属行业：</label>
            <div class=""layui-input-inline"" id=""industryID"">
            </div>
        </div>
        <div class=""layui-form-item"">
            <label class=""la");
                WriteLiteral(@"yui-form-label"">所属颜色：</label>
            <div class=""layui-input-inline"" id=""colorID"">
            </div>
        </div>
        <div class=""layui-form-item"">
            <label class=""layui-form-label"">所属平台：</label>
            <div class=""layui-input-inline"" id=""productID"">
            </div>
        </div>
        <div class=""layui-form-item"">
            <label class=""layui-form-label"">所属平台：</label>
            <div class=""layui-input-inline"" id=""clientID"">
            </div>
        </div>
        <div class=""layui-form-item content-center"">
            <!--dom结构部分-->
            <span>该案例的详情图片</span>
            <hr/>
            <div id=""uploader-demo"">
                <!--用来存放item-->
                <div id=""fileList"" class=""uploader-list""></div>
                <div id=""filePicker"">选择图片</div>
            </div>
        </div>
        <div class=""layui-form-item content-center"">
            <div class=""layui-btn-container"">
                <button type=""button"" class=""layui-");
                WriteLiteral(@"btn"" onclick=""javascript: closeIframe();"">取消</button>
                <button class=""layui-btn"" lay-submit lay-filter=""CaseFrom"">保存</button>
            </div>
        </div>
    </form>
    <script src=""/layui/layui.js""></script>
    <script src=""https://cdn.bootcss.com/jquery/3.3.1/jquery.min.js""></script>
    <script src=""https://cdn.bootcss.com/webuploader/0.1.1/webuploader.js""></script>
    <script>
        layui.config({
            base : './'
        }).extend({
            selectN: '../../../layui/layui-select-ext/layui_extends/selectN',
            selectM: '../../../layui/layui-select-ext/layui_extends/selectM',
            }).use(['form', 'layer', 'upload', 'selectM'], function () {
            var form = layui.form;
            var upload = layui.upload;
            var selectN = layui.selectN
                    , selectM = layui.selectM;
            var layer = layui.layer;
            var caseImage = new Array();
            //初始化数据
            $.get('");
                EndContext();
                BeginContext(7563, 29, false);
#line 233 "C:\Users\Administrator\Desktop\Company\CompanyWebSite\Areas\ManagementSystem\Views\CaseManager\AddCase.cshtml"
              Write(Url.Action("InitData","Case"));

#line default
#line hidden
                EndContext();
                BeginContext(7592, 2128, true);
                WriteLiteral(@"',
                function(data,status) {

                    //行业多选标签
                    selectM({
                        //元素容器【必填】
                        elem: '#industryID'
                        //候选数据【必填】
                        , data: data.data.industries
                        , max: data.data.industries.length
                        , width: 400
                        , name: 'industrycases'
                        //添加验证
                        , verify: 'required'
                    });


                    //颜色多选标签
                    selectM({
                        //元素容器【必填】
                        elem: '#colorID'
                        //候选数据【必填】
                        , data: data.data.colors
                        , max: data.data.colors.length
                        , width: 400
                        , name: 'colorcases'
                        //添加验证
                        , verify: 'required'
                    });
                    //产");
                WriteLiteral(@"品多选标签
                    selectM({
                        //元素容器【必填】
                        elem: '#productID'
                        //候选数据【必填】
                        , data: data.data.products
                        , max: data.data.products.length
                        , width: 400
                        , name: 'productcases'
                        //添加验证
                        , verify: 'required'
                    });

                    //产品多选标签
                    selectM({
                        //元素容器【必填】
                        elem: '#clientID'
                        //候选数据【必填】
                        , data: data.data.clients
                        , max: data.data.clients.length
                        , width: 400
                        , name: 'clientcases'
                        //添加验证
                        , verify: 'required'
                    }); 
                });


            //封面上传实例
            var uploadInst = upload.render({
   ");
                WriteLiteral("             elem: \'#cover-bt\' //绑定元素\r\n                ,url: \'/ManagementSystem/");
                EndContext();
                BeginContext(9721, 46, false);
#line 293 "C:\Users\Administrator\Desktop\Company\CompanyWebSite\Areas\ManagementSystem\Views\CaseManager\AddCase.cshtml"
                                    Write(Url.Action("MiddleCuttingImage", "FileUpload"));

#line default
#line hidden
                EndContext();
                BeginContext(9767, 743, true);
                WriteLiteral(@"' //上传接口
                ,accept: ""images""
                ,acceptMime: ""image/*""
                ,drag: true
                ,done: function(res){
                    //上传完毕回调
                    $(""#image"").attr(""src"", res.data);
                    $(""#cover"").val(res.data);
                }
                ,error: function(){
                    //请求异常回调
                }
            });


            // 初始化Web Uploader
            var uploader = WebUploader.create({

                // 选完文件后，是否自动上传。
                auto: true,

                // swf文件路径
                swf: 'https://cdn.bootcss.com/webuploader/0.1.1/Uploader.swf',

                // 文件接收服务端。
                server: '/ManagementSystem/");
                EndContext();
                BeginContext(10511, 45, false);
#line 318 "C:\Users\Administrator\Desktop\Company\CompanyWebSite\Areas\ManagementSystem\Views\CaseManager\AddCase.cshtml"
                                      Write(Url.Action("MiddleCuttingImage","FileUpload"));

#line default
#line hidden
                EndContext();
                BeginContext(10556, 3633, true);
                WriteLiteral(@"',

                // 选择文件的按钮。可选。
                // 内部根据当前运行是创建，可能是input元素，也可能是flash.
                pick: '#filePicker',
                // 只允许选择图片文件。
                accept: {
                    title: 'Images',
                    extensions: 'gif,jpg,jpeg,bmp,png',
                    mimeTypes: 'image/*'
                }
             });

            var $list = $(""#fileList"");
            // 当有文件添加进来的时候
            uploader.on( 'fileQueued', function( file ) {
                var $li = $(
                        '<div id=""' + file.id + '"" class=""file-item thumbnail"">' +
                        '<img>' +
                        '<div class=""info"">' + file.name + '</div>' +
                        '</div>'
                    ),
                    $img = $li.find('img');

                // $list为容器jQuery实例
                $list.append( $li );

                // 创建缩略图
                // 如果为非图片文件，可以不用调用此方法。
                // thumbnailWidth x thumbnailHeight 为 100 x 100");
                WriteLiteral(@"
                uploader.makeThumb( file, function( error, src ) {
                    if ( error ) {
                        $img.replaceWith('<span>不能预览</span>');
                        return;
                    }
                    $img.attr( 'src', src );
                }, 200, 200 );
            });

            // 文件上传过程中创建进度条实时显示。
            uploader.on( 'uploadProgress', function( file, percentage ) {
                var $li = $( '#'+file.id ),
                    $percent = $li.find('.progress span');

                // 避免重复创建
                if ( !$percent.length ) {
                    $percent = $('<p class=""progress""><span></span></p>')
                        .appendTo( $li )
                        .find('span');
                }

                $percent.css( 'width', percentage * 100 + '%' );
            });

            // 文件上传成功，给item添加成功class, 用样式标记上传成功。
            uploader.on('uploadSuccess', function (file, response ) {
            $('#' + file.id).add");
                WriteLiteral(@"Class('upload-state-done');
                console.log(response);
                caseImage.push(response.data);
            });

            // 文件上传失败，显示上传出错。
            uploader.on( 'uploadError', function( file ) {
                var $li = $( '#'+file.id ),
                    $error = $li.find('div.error');

                // 避免重复创建
                if ( !$error.length ) {
                    $error = $('<div class=""error""></div>').appendTo( $li );
                }

                $error.text('上传失败');
            });

            // 完成上传完了，成功或者失败，先删除进度条。
            uploader.on( 'uploadComplete', function( file ) {
                $( '#'+file.id ).find('.progress').remove();
            });

            //表单提交数据
            form.on(""submit(CaseFrom)"", function(data) {
                if (data.field.cover == """" || caseImage.length <= 0) {
                    layer.msg(""封面或详情图片不能为空！"");
                } else {
                    var formdata = new Object();
               ");
                WriteLiteral(@"     formdata.name = data.field.name;
                    formdata.caseimages = caseImage;
                    formdata.cover = data.field.cover;
                    formdata.industrycases = data.field.industrycases.split("","");
                    formdata.colorcases = data.field.colorcases.split("","");
                    formdata.productcases = data.field.productcases.split("","");
                    formdata.clientcases = data.field.clientcases.split("","");
                    console.log(formdata);

                    $.post('/ManagementSystem/");
                EndContext();
                BeginContext(14190, 35, false);
#line 412 "C:\Users\Administrator\Desktop\Company\CompanyWebSite\Areas\ManagementSystem\Views\CaseManager\AddCase.cshtml"
                                         Write(Url.Action("AddCase","CaseManager"));

#line default
#line hidden
                EndContext();
                BeginContext(14225, 643, true);
                WriteLiteral(@"', formdata, function(data,status) {
                        if (data.total == 0) {
                            layer.msg(""添加失败"");
                        } else {
                            parent.layui.table.reload(""CaseTable"");
                            closeIframe();
                        }
                    });
                    
                }
                return false;
            });
        });

        //关闭当前iframe
        function closeIframe() {
            var index = parent.layer.getFrameIndex(window.name); //先得到当前iframe层的索引
            parent.layer.close(index);
        }
    </script>
");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(14875, 9, true);
            WriteLiteral("\r\n</html>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<object> Html { get; private set; }
    }
}
#pragma warning restore 1591
